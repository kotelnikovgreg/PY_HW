"""
    1. Создать программный файл в текстовом формате, записать в него построчно данные,
    вводимые пользователем. Об окончании ввода данных будет свидетельствовать пустая строка
"""

# f_obj = open("my_file", 'w')
# content = input('Введите данные: ')
# while content != '':
#     f_obj.write(f'{content}\n')
#     content = input('Введите данные: ')
# f_obj.close()

"""
    2. Создать текстовый файл (не программно), сохранить в нём несколько строк, 
    выполнить подсчёт строк и слов в каждой строке.
"""

# my_f = open("text1", "r")
# words = 0
# lines = 0
# for line in my_f:
#     lines += 1
#     for word in line.split():
#         words += 1
#     print(f'Строка - {lines}, слов {words}')
#     words = 0
# print(f'Всего строк - {lines}')
# my_f.close()

"""
    3. Создать текстовый файл (не программно). Построчно записать фамилии сотрудников 
    и величину их окладов (не менее 10 строк). 
    Определить, кто из сотрудников имеет оклад менее 20 тысяч, вывести фамилии этих сотрудников.
    Выполнить подсчёт средней величины дохода сотрудников.
    Пример файла:
    
    Иванов 23543.12
    Петров 13749.32
"""

# with open("text3") as file:
#     lines = file.readlines()

"""                                   
    4. Создать (не программно) текстовый файл со следующим содержимым:
    One — 1
    Two — 2
    Three — 3
    Four — 4
    Напишите программу, открывающую файл на чтение и считывающую построчно данные. 
    При этом английские числительные должны заменяться на русские. 
    Новый блок строк должен записываться в новый текстовый файл.
"""

# trans = {"One": "Один",
#          "Two": "Два",
#          "Tree": "Три",
#          "Four": "Четыре"}
#
# with open("text4") as f_1, open("text4_ru", "w") as f_2:
#     for line in f_1.readlines():
#         num_t, num = line.rstrip().split(' — ')
#         f_2.write(f'{trans[num_t]} - {num}')


"""
    5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых пробелами.
    Программа должна подсчитывать сумму чисел в файле и выводить её на экран.
"""

# with open("text5", "w") as nums:
#     in_nums = input("Введите числа через пробел: ")
#     print(in_nums, file=nums)
#
# with open("text5", "r") as nums:
#     nums_list = nums.read().rstrip().split()
#     nums_list = [int(num) for num in nums_list]
#     print(f'Сумма чисел в файле: {sum(nums_list)}')

"""
    6. Сформировать (не программно) текстовый файл. 
    В нём каждая строка должна описывать учебный предмет и наличие лекционных, 
    практических и лабораторных занятий по предмету. Сюда должно входить и количество занятий. 
    Необязательно, чтобы для каждого предмета были все типы занятий.
    Сформировать словарь, содержащий название предмета и общее количество занятий по нему. 
    Вывести его на экран.
    Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
    Физика: 30(л) — 10(лаб)
    Физкультура: — 30(пр) —
    Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
"""

"""
    7. Создать вручную и заполнить несколькими строками текстовый файл, 
    в котором каждая строка будет содержать данные о фирме: 
    название, форма собственности, выручка, издержки.
    Пример строки файла: firm_1 ООО 10000 5000.
    
    Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. 
    Если фирма получила убытки, в расчёт средней прибыли её не включать.
    Далее реализовать список. 
    Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
    Если фирма получила убытки, также добавить её в словарь (со значением убытков).
    Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
    
    Итоговый список сохранить в виде json-объекта в соответствующий файл.
    Пример json-объекта:
    [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
    Подсказка: использовать менеджер контекста.
"""
